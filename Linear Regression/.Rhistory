install.packages("devtools")
library(devtools)
install_github("genomicsclass/dagdata")
library(devtools)
install_github("ririzarr/rafalib")
x = 1:10
setwd("~/Documents/MOOCS/edX/The Analytics Edge II/unit2")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
climate_change = read.csv("climate_change.csv")
climate_change_test = subset(climate_change,climate_change$Year>2006)
climate_change = read.csv("climate_change.csv")
climate_change_train = subset(climate_change, climate_change$Year<=2006)
climate_change_test = subset(climate_change,climate_change$Year>2006)
```
climate_change = read.csv("climate_change.csv")
model1 = lm(Temp ~ MEI + CO2 + CH4 + N20 + CFC.11 + CFC.12 + TSI + Aerosols, data = climate_change_train)
model1 = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI + Aerosols, data = climate_change_train)
summary(model1)
cor(climate_change_train)
cor(climate_change_train)
cor(climate_change_train,climate_change_train$N2O)
cor(climate_change_train,climate_change_train$CFC.11)
modeln20 = lm(Temp ~ MEI + TSI + Aerosols + N2O, data = climate_change_test)
summary(modeln20)
modeln20 = lm(Temp ~ MEI + TSI + Aerosols + N2O, data = climate_change_train)
summary(modeln20)
?step
stepmodel = step(model1)
summary(stepmodel)
steppredictions = predict(stepmodel, climate_change_test)
SSE = sum(steppredictions$residuals)^2
steppredictions = predict(stepmodel, climate_change_test)
SSE = sum(steppredictions$residuals)^2
SSE = sum(steppredictions - climate_change_test$Temp)^2
SST = sum((mean(climate_change$Temp) - climate_change$Temp)^2)
R2 = 1-SSE/SST
R2
steppredictions = predict(stepmodel, newdata = climate_change_test)
SSE = sum((steppredictions - climate_change_test$Temp)^2)
SST = sum((mean(climate_change$Temp) - climate_change$Temp)^2)
R2 = 1-SSE/SST
R2
steppredictions = predict(stepmodel, newdata = climate_change_test)
SSE = sum((steppredictions - climate_change_test$Temp)^2)
SST = sum((mean(climate_change$Temp) - climate_change_test$Temp)^2)
R2 = 1-SSE/SST
R2
steppredictions = predict(stepmodel, newdata = climate_change_test)
SSE = sum((steppredictions - climate_change_test$Temp)^2)
SST = sum((mean(climate_change$Temp) - climate_change_test$Temp)^2)
R2 = 1 - SSE/SST
R2
source('~/.active-rstudio-document', echo=TRUE)
?predict
require(utils)
for(fn in methods("predict"))
try({
f <- eval(substitute(getAnywhere(fn)$objs[[1]], list(fn = fn)))
cat(fn, ":\n\t", deparse(args(f)), "\n")
}, silent = TRUE)
steppredictions = predict(stepmodel, newdata = climate_change_test)
SSE = sum((steppredictions - climate_change_test$Temp)^2)
SST = sum((mean(climate_change$Temp) - climate_change_test$Temp)^2)
R2 = 1 - SSE/SST
R2
R2 = 1 - (SSE/SST)
R2
SST = sum((mean(climate_change_test$Temp) - climate_change_test$Temp)^2)
R2 = 1 - (SSE/SST)
R2
SST = sum((mean(climate_change_test$Temp) - climate_change_test$Temp)^2)
R2 = 1 - (SSE/SST)
R2
SST = sum((mean(climate_change_train$Temp) - climate_change_test$Temp)^2)
R2 = 1 - (SSE/SST)
R2
pisa_train = read.csv("pisa2009train.csv")
nrow(pisa_train)
tapply(pisa_train$readingScore, pisa_train$male, mean)
summary(pisa_train)
pisaTrain = na.omit(pisaTrain)
pisaTrain = read.csv("pisa2009train.csv")
nrow(pisaTrain)
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
summary(pisaTrain)
pisaTest = read.csv("pisa2009test.csv")
pisaTrain = na.omit(pisaTrain)
pisaTest = na.omit(pisaTest)
nrow(pisaTrain)
nrow(pisaTest)
pisaTrain$raceeth = relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth = relevel(pisaTest$raceeth, "White")
lmScore = lm(readingScore ~ ., data = pisaTrain)
summary(lmScore)
RMSE = sqrt((sum(lmScore$residuals)^2)/nrow(pisaTrain))
RMSE
RMSE = sqrt(sum(lmScore$residuals^2)/nrow(pisaTrain))
RMSE
predTest = predict(lmScore, newdata = pisaTest)
summary(predTest)
637.7-353.2
SSE = sum((predTest - pisaTest$readingScore)^2)
SSE
RMSE = sqrt(SSE/nrow(pisaTest))
RMSE
baseline = mean(pisaTrain$readingScore)
baseline
SST = sum((baseline - pisaTest$readingScore)^2)
SST
R2 = 1 - SSE/SST
R2
setwd("~/Documents/MOOCS/edX/The Analytics Edge II/unit2")
FluTrain = read.csv("FluTrain.csv")
summary(FluTrain)
FluTrain$Week[which.max(FluTrain$ILI)]
FluTrain$Week[which.max(FluTrain$Queries)]
hist(FluTrain$ILI)
plot(log(FluTrain$ILI),FluTrain$Queries)
FluTrend1 = lm(log(ILI) ~ Queries, data = FluTrain)
summary(FluTrend1)
cor(log(FluTrain$ILI),FluTrain$Queries)
cor = cor(log(FluTrain$ILI),FluTrain$Queries)
cor^2
log(1/cor)
exp(-0.5*cor)
?which
which(FluTrain$Week %like% "March 11, 2012")
which(FluTrain$Week == "March 11, 2012")
which(FluTrain$Week == "2012-03-11")
which(FluTrain$Week =%like%= "2012-03-11")
which(FluTrain$Week %like% "2012-03-11")
which(FluTrain$Week %like% "2012-03-11 - 2012-03-17")
which(FluTrain$Week == "2012-03-11 - 2012-03-17")
FluTrain[which(FluTrain$Week == "2012-03-11 - 2012-03-17")]
FluTrain$ILI[which(FluTrain$Week == "2012-03-11 - 2012-03-17")]
which(FluTrend1$Week == "2012-03-11 - 2012-03-17")
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
FluTest = read.csv("FluTest.csv")
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
which(FluTest$Week == "2012-03-11 - 2012-03-17")
which(FluTest$Week == "2012-03-11")
FluTrend1[which(FluTest$Week == "2012-03-11 - 2012-03-17")]
PredTest1[which(FluTest$Week == "2012-03-11 - 2012-03-17")]
FluTest[11]-PredTest1[11]/FluTest[11]
which(FluTest$Week == "2012-03-11 - 2012-03-17")
FluTest[11]-PredTest1[11]/FluTest[11]
FluTest$ILI[11]-PredTest1[11]/FluTest$ILI[11]
(FluTest$ILI[11]-PredTest1[11])/FluTest$ILI[11]
SSE = sum((FluTest$ILI-PredTest1)^2)
RMSE = sqrt(SSE/nrow(PredTest1))
RMSE
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
SSE = sum((FluTest$ILI-PredTest1)^2)
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
install.packages("zoo")
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
summary(FluTrain$ILILag2)
plot(log(FluTrain$ILILag2), log(FluTrain$ILI))
FluTrend2 = lm(log(ILI) ~ Queries + log(ILILag2), data = FluTrain)
summary(FluTrend2)
ILILag2 = lag(zoo(FluTest$ILI), -2, na.pad=TRUE)
FluTest$ILILag2 = coredata(ILILag2)
summary(FluTest$ILILag2)
FluTrain[-1]
FluTrain$ILI[-1]
FluTrain$ILI[11]
FluTrain$ILI[nrow(FluTrain)]
FluTest[1] = FluTrain$ILI[nrow(FluTrain)-1]
FluTest[2] = FluTrain$ILI[nrow(FluTrain)]
head(FluTest)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("zoo")
FluTest$ILILag2[1] = FluTrain$ILI[nrow(FluTrain)-1]
FluTest$ILILag2[2] = FluTrain$ILI[nrow(FluTrain)]
head(FluTest)
PredTest2 = exp(predict(FluTrend2, newdata = FluTest))
SSE = sum((FluTest$ILI - PredTest2)^1)
SSE = sum((FluTest$ILI - PredTest2)^2)
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
